{"version":3,"file":"static/js/281.5c2899d0.chunk.js","mappings":"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","sources":["webpack://react-homework/./src/components/UserOrderForm/UserOrderForm.module.css?f552","webpack://react-homework/./src/components/ProductBasketItem/ProductBasketItem.module.css?172c","components/ProductBasketItem/ProductBasketItem.jsx","components/UserOrderForm/UserOrderForm.jsx","pages/ShopingCartPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userOrderForm\":\"UserOrderForm_userOrderForm__Zshtv\",\"userOrderWrapper\":\"UserOrderForm_userOrderWrapper__xZksX\",\"userOrderForm__label\":\"UserOrderForm_userOrderForm__label__CrXpu\",\"userOrderForm__text\":\"UserOrderForm_userOrderForm__text__jRCfI\",\"userOrderForm__input\":\"UserOrderForm_userOrderForm__input__5MzEm\",\"userOrderForm__button\":\"UserOrderForm_userOrderForm__button__QX7mp\",\"userBasketWrapper\":\"UserOrderForm_userBasketWrapper__Wcj5e\",\"totalPrice\":\"UserOrderForm_totalPrice__Xp6CB\"};","// extracted by mini-css-extract-plugin\nexport default {\"productList__item\":\"ProductBasketItem_productList__item__rCxum\",\"itemwraper\":\"ProductBasketItem_itemwraper__Zhzhc\",\"itemImage\":\"ProductBasketItem_itemImage__gf7XW\",\"descriptionWrapper\":\"ProductBasketItem_descriptionWrapper__eU2s8\",\"productList__text\":\"ProductBasketItem_productList__text__TGECq\",\"productList__input\":\"ProductBasketItem_productList__input__zukxv\",\"productList__button\":\"ProductBasketItem_productList__button__4OPlm\"};","import React from 'react';\nimport css from './ProductBasketItem.module.css';\nimport propTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport {\n  deleteProductFromBasket,\n  updateProductFromBasket,\n} from 'redux/orderBasketSlice/orderBasketSlice';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nconst ProductBasketItem = ({ id, name, price, img, count }) => {\n  const [sum, setSum] = useState(count);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(updateProductFromBasket({ id, count: sum }));\n  }, [dispatch, id, sum]);\n\n  return (\n    <li className={css.productList__item}>\n      <div className={css.itemwraper}>\n        <img className={css.itemImage} src={img} alt=\"\" width={200} />\n        <div className={css.descriptionWrapper}>\n          <p className={css.productList__text}>{`${name} `}</p>\n          <p className={css.productList__text}>{`${price * sum} $`}</p>\n        </div>\n        <div className={css.descriptionWrapper}>\n          <input\n            className={css.productList__input}\n            type=\"number\"\n            name=\"sum\"\n            min=\"1\"\n            max=\"150\"\n            value={sum}\n            onChange={e => {\n              setSum(e.currentTarget.value);\n            }}\n          />\n          <button\n            className={css.productList__button}\n            type=\"button\"\n            onClick={() => dispatch(deleteProductFromBasket({ id }))}\n          >\n            delete\n          </button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nProductBasketItem.propTypes = {\n  id: propTypes.string.isRequired,\n  name: propTypes.string.isRequired,\n};\n\nexport default ProductBasketItem;\n","import { useState } from 'react';\r\nimport css from './UserOrderForm.module.css';\r\nimport { useAddOrderRTKMutation } from 'redux/RTKOrdersApi/OrdersApi';\r\nimport {\r\n  getUserProductsInBasket,\r\n  resetProductInBasket,\r\n} from 'redux/orderBasketSlice/orderBasketSlice';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ProductBasketItem from 'components/ProductBasketItem/ProductBasketItem';\r\n\r\nconst UserOrderForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [adress, setAdress] = useState('');\r\n  const [orderNumber, setOrderNumber] = useState('');\r\n  const userProductsInBasket = useSelector(getUserProductsInBasket);\r\n  console.log('userProductsInBasket', userProductsInBasket);\r\n\r\n  const dispatch = useDispatch();\r\n  const [addOrderRTK] = useAddOrderRTKMutation();\r\n\r\n  const handleImputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    // eslint-disable-next-line default-case\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n      case 'phone':\r\n        setPhone(value);\r\n        break;\r\n      case 'adress':\r\n        setAdress(value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const contact = {\r\n      name,\r\n      email,\r\n      phone,\r\n      adress,\r\n    };\r\n    const newOrder = {\r\n      contact,\r\n      order: userProductsInBasket,\r\n      totalPrice,\r\n    };\r\n    console.log('newOrder', newOrder);\r\n    const res = await addOrderRTK(newOrder);\r\n    console.log(res);\r\n    const number = res.data.responseData.orderNumber;\r\n    setOrderNumber(number);\r\n    reset();\r\n  };\r\n\r\n  const totalPrice = userProductsInBasket.reduce(\r\n    (acc, item) => Number(acc) + Number(item.price) * Number(item.count),\r\n    [0]\r\n  );\r\n  console.log('totalprice', totalPrice);\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setEmail('');\r\n    setPhone('');\r\n    setAdress('');\r\n    dispatch(resetProductInBasket([]));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!orderNumber && (\r\n        <form className={css.userOrderForm} onSubmit={handleSubmit}>\r\n          <div className={css.userOrderWrapper}>\r\n            <label className={css.userOrderForm__label}>\r\n              <span className={css.userOrderForm__text}>Name</span>\r\n              <input\r\n                className={css.userOrderForm__input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                //   required\r\n                value={name}\r\n                onChange={handleImputChange}\r\n                placeholder=\"Name\"\r\n              />\r\n            </label>\r\n            <label className={css.userOrderForm__label}>\r\n              <span className={css.userOrderForm__text}>Email</span>\r\n              <input\r\n                className={css.userOrderForm__input}\r\n                type=\"text\"\r\n                name=\"email\"\r\n                // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"email \"\r\n                value={email}\r\n                onChange={handleImputChange}\r\n                placeholder=\"example@gmail.com\"\r\n                required\r\n              />\r\n            </label>\r\n            <label className={css.userOrderForm__label}>\r\n              <span className={css.userOrderForm__text}>Phone</span>\r\n              <input\r\n                className={css.userOrderForm__input}\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                value={phone}\r\n                onChange={handleImputChange}\r\n                required\r\n                placeholder=\"+\"\r\n              />\r\n            </label>\r\n            <label className={css.userOrderForm__label}>\r\n              <span className={css.userOrderForm__text}>Adress</span>\r\n              <input\r\n                className={css.userOrderForm__input}\r\n                type=\"text\"\r\n                name=\"adress\"\r\n                title=\"adress\"\r\n                value={adress}\r\n                onChange={handleImputChange}\r\n                required\r\n                placeholder=\"city streed h\\a\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <ul className={css.userBasketWrapper}>\r\n            {userProductsInBasket.map(({ id, name, img, price, count }) => (\r\n              <ProductBasketItem\r\n                id={id}\r\n                name={name}\r\n                price={price}\r\n                img={img}\r\n                count={count}\r\n                key={id}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <p className={css.totalPrice}>Total price: {totalPrice}</p>\r\n          <button className={css.userOrderForm__button} type=\"submit\">\r\n            submit\r\n          </button>\r\n        </form>\r\n      )}\r\n      {orderNumber && (\r\n        <h1>\r\n          Your order successfull completed, number of order is {orderNumber}\r\n        </h1>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserOrderForm;\r\n\r\n//AIzaSyCR7hSB4k6A1zGCQ5y9-FGK5igYgbTnv7k\r\n","// import UserContactForm from 'components/UserContactForm/UserContactForm';\r\nimport UserOrderForm from 'components/UserOrderForm/UserOrderForm';\r\n\r\nconst ShopingCartPage = () => {\r\n  return (\r\n    <>\r\n      <UserOrderForm />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShopingCartPage;\r\n"],"names":["id","name","price","img","count","useState","sum","setSum","dispatch","useDispatch","useEffect","updateProductFromBasket","className","css","src","alt","width","type","min","max","value","onChange","e","currentTarget","onClick","deleteProductFromBasket","setName","email","setEmail","phone","setPhone","adress","setAdress","orderNumber","setOrderNumber","userProductsInBasket","useSelector","getUserProductsInBasket","console","log","useAddOrderRTKMutation","addOrderRTK","handleImputChange","event","handleSubmit","preventDefault","newOrder","contact","order","totalPrice","res","number","data","responseData","reset","reduce","acc","item","Number","resetProductInBasket","onSubmit","pattern","title","placeholder","required","map"],"sourceRoot":""}