{"version":3,"file":"static/js/631.8e00de0e.chunk.js","mappings":"sNACA,EAAkC,yCAAlC,EAAgG,4CAAhG,EAAqK,gDAArK,EAA6O,+CAA7O,EAAqT,gDAArT,EAA+X,iDAA/X,EAA2c,kD,UCA3c,GAAgB,kBAAoB,6CAA6C,WAAa,sCAAsC,iBAAmB,4CAA4C,UAAY,qCAAqC,UAAY,qCAAqC,mBAAqB,8CAA8C,mBAAqB,8CAA8C,oBAAsB,gD,SCuCjc,EApC2B,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACnC,OACE,eAAIC,UAAWC,EAAAA,kBAAf,UACE,iBAAKD,UAAWC,EAAAA,WAAhB,WACE,gBAAKD,UAAWC,EAAAA,iBAAhB,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACb,iBAAKH,UAAWC,EAAAA,UAAhB,WACE,gBACED,UAAWC,EAAAA,UACXG,IAAKD,EAAKE,IACVC,IAAI,GACJC,MAAO,OAET,uBAAIJ,EAAKK,QACT,4BACE,gCAAQL,EAAKM,UACb,iCAASC,OAAOP,EAAKM,OAASN,EAAKL,cAVHK,EAAKK,YAgB7C,gBAAKR,UAAWC,EAAAA,mBAAhB,UACE,cAAGD,UAAWC,EAAAA,kBAAd,+BAAqDH,EAArD,gBCqEV,EA1FwB,WACtB,OAA0Ba,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,IAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eAEMC,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,cAAtBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MAGd,OAAQf,GACN,IAAK,QACHK,EAASU,GACT,MACF,IAAK,QACHR,EAASQ,KAKTC,EAAY,mCAAG,WAAMH,GAAN,gFACnBA,EAAMI,iBACAC,EAAU,CACdd,MAAAA,EACAE,MAAAA,GAEFa,QAAQC,IAAI,UAAWF,GANJ,SAODP,EAAaO,GAPZ,OAObG,EAPa,OAQnBZ,EAAcY,EAAIC,KAAKA,MACvBC,IATmB,2CAAH,sDAYZA,EAAQ,WACZlB,EAAS,IACTE,EAAS,KAGX,OACE,+BACE,kBAAMf,UAAWC,EAAqB+B,SAAUR,EAAhD,WACE,iBAAKxB,UAAWC,EAAhB,WACE,mBAAOD,UAAWC,EAAlB,WACE,iBAAMD,UAAWC,EAAjB,oBACA,kBACED,UAAWC,EACXgC,KAAK,OACLzB,KAAK,QAEL0B,MAAM,SACNX,MAAOX,EACPuB,SAAUf,EACVgB,YAAY,oBACZC,UAAQ,QAGZ,mBAAOrC,UAAWC,EAAlB,WACE,iBAAMD,UAAWC,EAAjB,oBACA,kBACED,UAAWC,EACXgC,KAAK,OACLzB,KAAK,QAEL0B,MAAM,+FACNX,MAAOT,EACPqB,SAAUf,EACViB,UAAQ,EACRD,YAAY,YAIjBpB,IACC,eAAIhB,UAAWC,EAAf,SACGe,EAAWd,KAAI,gBAAGoC,EAAH,EAAGA,IAAKvC,EAAR,EAAQA,MAAOwC,EAAf,EAAeA,WAAf,OACd,SAAC,EAAD,CACEC,GAAIF,EACJvC,MAAOA,EACPD,MAAOyC,GACFD,SAKb,mBAAQtC,UAAWC,EAA6BgC,KAAK,SAArD,0BClFR,EAJoB,WAClB,OAAO,SAAC,EAAD","sources":["webpack://react-homework/./src/components/UserHistoryForm/UserHistoryForm.module.css?0e08","webpack://react-homework/./src/components/ProductHistoryItem/ProductBasketItem.module.css?3c2b","components/ProductHistoryItem/ProductHistoryItem.jsx","components/UserHistoryForm/UserHistoryForm.jsx","pages/HistoryPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userHistoryForm\":\"UserHistoryForm_userHistoryForm__0STUN\",\"userHistoryWrapper\":\"UserHistoryForm_userHistoryWrapper__uO8O0\",\"userHistoryForm__label\":\"UserHistoryForm_userHistoryForm__label__9iGmO\",\"userHistoryForm__text\":\"UserHistoryForm_userHistoryForm__text__r8aW+\",\"userHistoryForm__input\":\"UserHistoryForm_userHistoryForm__input__qb-ND\",\"userHistoryForm__button\":\"UserHistoryForm_userHistoryForm__button__gWo73\",\"userHistoryOrdersWrapper\":\"UserHistoryForm_userHistoryOrdersWrapper__hGQlE\",\"totalPrice\":\"UserHistoryForm_totalPrice__7lOK+\"};","// extracted by mini-css-extract-plugin\nexport default {\"productList__item\":\"ProductBasketItem_productList__item__4ti9I\",\"itemwraper\":\"ProductBasketItem_itemwraper__h1U68\",\"itemsOrderWraper\":\"ProductBasketItem_itemsOrderWraper__kGGLY\",\"orderItem\":\"ProductBasketItem_orderItem__3v0Db\",\"itemImage\":\"ProductBasketItem_itemImage__VGGTo\",\"descriptionWrapper\":\"ProductBasketItem_descriptionWrapper__TGhK1\",\"productList__input\":\"ProductBasketItem_productList__input__w2Yfv\",\"productList__button\":\"ProductBasketItem_productList__button__678gT\"};","import React from 'react';\nimport css from './ProductBasketItem.module.css';\nimport propTypes from 'prop-types';\n\nconst ProductHistoryItem = ({ price, order }) => {\n  return (\n    <li className={css.productList__item}>\n      <div className={css.itemwraper}>\n        <div className={css.itemsOrderWraper}>\n          {order.map(item => (\n            <div className={css.orderItem} key={item.name}>\n              <img\n                className={css.itemImage}\n                src={item.img}\n                alt=\"\"\n                width={200}\n              />\n              <p>{item.name}</p>\n              <div>\n                <span>x{item.count}</span>\n                <span> ${Number(item.count) * item.price}</span>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className={css.descriptionWrapper}>\n          <p className={css.productList__text}>{`Total price ${price} $`}</p>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nProductHistoryItem.propTypes = {\n  price: propTypes.number.isRequired,\n  order: propTypes.array.isRequired,\n  id: propTypes.string.isRequired,\n};\n\nexport default ProductHistoryItem;\n","import { useState } from 'react';\r\nimport css from './UserHistoryForm.module.css';\r\nimport { useGetOrdersRTKMutation } from 'redux/RTKOrdersApi/OrdersApi';\r\n\r\nimport ProductHistoryItem from 'components/ProductHistoryItem/ProductHistoryItem';\r\n\r\nconst UserHistoryForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [userOrders, setUserOrders] = useState([]);\r\n  const [getOrdersRTK] = useGetOrdersRTKMutation();\r\n\r\n  const handleImputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    // eslint-disable-next-line default-case\r\n    switch (name) {\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n      case 'phone':\r\n        setPhone(value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const contact = {\r\n      email,\r\n      phone,\r\n    };\r\n    console.log('contact', contact);\r\n    const res = await getOrdersRTK(contact);\r\n    setUserOrders(res.data.data);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setEmail('');\r\n    setPhone('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={css.userHistoryForm} onSubmit={handleSubmit}>\r\n        <div className={css.userHistoryWrapper}>\r\n          <label className={css.userHistoryForm__label}>\r\n            <span className={css.userHistoryForm__text}>Email</span>\r\n            <input\r\n              className={css.userHistoryForm__input}\r\n              type=\"text\"\r\n              name=\"email\"\r\n              // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"email \"\r\n              value={email}\r\n              onChange={handleImputChange}\r\n              placeholder=\"example@gmail.com\"\r\n              required\r\n            />\r\n          </label>\r\n          <label className={css.userHistoryForm__label}>\r\n            <span className={css.userHistoryForm__text}>Phone</span>\r\n            <input\r\n              className={css.userHistoryForm__input}\r\n              type=\"text\"\r\n              name=\"phone\"\r\n              // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              value={phone}\r\n              onChange={handleImputChange}\r\n              required\r\n              placeholder=\"+\"\r\n            />\r\n          </label>\r\n        </div>\r\n        {userOrders && (\r\n          <ul className={css.userHistoryOrdersWrapper}>\r\n            {userOrders.map(({ _id, order, totalPrice }) => (\r\n              <ProductHistoryItem\r\n                id={_id}\r\n                order={order}\r\n                price={totalPrice}\r\n                key={_id}\r\n              />\r\n            ))}\r\n          </ul>\r\n        )}\r\n        <button className={css.userHistoryForm__button} type=\"submit\">\r\n          submit\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserHistoryForm;\r\n\r\n//AIzaSyCR7hSB4k6A1zGCQ5y9-FGK5igYgbTnv7k\r\n","import UserHistoryForm from 'components/UserHistoryForm/UserHistoryForm';\r\n\r\nconst HistoryPage = () => {\r\n  return <UserHistoryForm />;\r\n};\r\n\r\nexport default HistoryPage;\r\n"],"names":["price","order","className","css","map","item","src","img","alt","width","name","count","Number","useState","email","setEmail","phone","setPhone","userOrders","setUserOrders","useGetOrdersRTKMutation","getOrdersRTK","handleImputChange","event","currentTarget","value","handleSubmit","preventDefault","contact","console","log","res","data","reset","onSubmit","type","title","onChange","placeholder","required","_id","totalPrice","id"],"sourceRoot":""}